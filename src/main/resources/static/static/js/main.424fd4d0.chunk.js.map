{"version":3,"sources":["page/LicenseGenerator/MainPage/MainPage.tsx","component/DraggerUpload/DraggerUpload.tsx","component/Header/Header.tsx","component/PreviewHTML/PreviewHTML.tsx","component/HtmlTable/HtmlTable.tsx","component/LicenseTable/LicenseTable.tsx","component/Loading/Loading.tsx","component/Menu/Menu.tsx","component/Panel/Panel.tsx","component/Split/Split.tsx","page/LicenseGenerator/CollectData/CollectData.tsx","page/LicenseGenerator/ExcelUploadPage/ExcelUploadPage.tsx","page/LicenseGenerator/FinishPage/FinishPage.tsx","page/LicenseGenerator/ConfirmPage/ConfirmPage.tsx","page/LicenseGenerator/index.ts","common/MenuConfig.tsx","page/HomePage/HomePage.tsx","App.tsx","reportWebVitals.ts","store/index.ts","store/HomePageStore.ts","store/LicenseInfoStore.ts","index.tsx"],"names":["StepStatus","Dragger","Upload","DraggerUpload","props","state","this","buttonText","hint","uploadProps","className","InboxOutlined","React","Component","PreviewHTML","bodyStyle","overflow","height","width","visible","title","onCancel","handleCancel","footer","onClick","dangerouslySetInnerHTML","__html","children","HtmlTable","observer","fileContent","filteredInfo","sortedInfo","preview","currentFileName","selectedRowKeys","loading","field","order","record1","record2","console","log","setState","length","self","action","onOk","licenseInfoStore","remove","showMessage","htmlFileDataSource","clear","pagination","filters","sorter","dataIndex","key","bind","sortOrder","getSortOrder","call","render","size","text","_","round","lastModifiedDate","toDateString","file","type","review","reader","FileReader","readAsText","onload","event","result","target","name","rowSelection","onChange","onSelectChange","columns","getColumns","danger","removeAll","position","showTotal","total","range","handleChange","bordered","dataSource","LicenseTable","filterByStatus","removeLicenseInfo","status","convert","value","filteredValue","onFilter","record","message","banner","label","e","clearFilter","disabled","licenseInfoDataSource","Group","options","getStatusOptions","changeStatusOptions","optionType","buttonStyle","Loading","display","tip","SubMenu","Menu","MenuList","minWidth","maxWidth","menuConfig","defaultSelectedKeys","mode","theme","collapsed","menuItems","arr","i","menuItem","link","to","icon","subItem","element","getMenuItem","push","Item","style","inlineCollapsed","toggleCollapsed","marginBottom","MenuUnfoldOutlined","MenuFoldOutlined","Panel","extra","showOrHideContent","CaretUpOutlined","CaretDownOutlined","Split","CollectData","fileList","fileMap","accept","multiple","showUploadList","uploading","beforeUpload","addFile","homePageStore","showLoading","formData","FormData","closeLoading","showErrorMessage","item","append","axios","url","method","data","then","res","licenseInfoList","nextStep","catch","error","getUploadProps","submit","ExcelUploadPage","defaults","timeout","enableNext","validExcelFile","errorMessage","excelFile","Modal","destroyAll","showDownloadIcon","showRemoveIcon","handleUpload","responseType","res2","content","blob","Blob","fileName","document","createElement","elink","download","href","URL","createObjectURL","body","appendChild","click","revokeObjectURL","removeChild","licenseInfo","JSON","stringify","downloadFile","FinishPage","subTitle","ConfirmPage","exportExcel","Step","Steps","MainPage","current","maxCurrent","propsAttr","Finish","Process","Wait","getPageBycurrent","getStepStatus","menuItms","PieChartOutlined","HomePage","msg","confirm","config","ExclamationCircleOutlined","licenseGenerator","LicenseGenerator","path","exact","from","App","inject","stores","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","makeObservable","observable","bound","computed","obj","undefined","fileInfo","selectedKeys","indexOf","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.424fd4d0.chunk.js","sourcesContent":["import React, { ReactElement, ReactNode } from 'react';\nimport './MainPage.styl';\nimport CollectData from 'page/LicenseGenerator/CollectData/CollectData';\nimport ExcelUploadPage from 'page/LicenseGenerator/ExcelUploadPage/ExcelUploadPage';\nimport FinishPage from 'page/LicenseGenerator/FinishPage/FinishPage';\nimport ConfirmPage from 'page/LicenseGenerator/ConfirmPage/ConfirmPage';\nimport { Steps} from 'antd';\nimport {LicenseInfoStore,HomePageStore} from 'src/store'\nconst { Step} = Steps;\n\nexport interface Props{\n  showMessage:(msg:string | ReactNode,action:{onOk?:()=>void,onCancel?:()=>void}) => void,\n  showErrorMessage:(errorMessage:string | ReactNode,) => void,\n  licenseInfoStore:LicenseInfoStore,\n  homePageStore:HomePageStore\n}\ninterface State{\n  current:number,\n  maxCurrent:number\n}\nenum StepStatus{\n  Finish=\"finish\",\n  Process=\"process\",\n  Wait=\"wait\"\n}\n\nclass MainPage extends React.Component<Props,State> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n          current: 0,\n          maxCurrent:0\n        }\n        \n    }\n\n    nextStep(current:number):void{\n      this.setState({ current:current,\n      maxCurrent:current });\n    }\n\n    onChange(current:number):void{\n      if(current<=this.state.maxCurrent && current!==this.state.current){\n        this.setState({ current });\n      }\n    }\n\n    getPageBycurrent():ReactNode{\n      let propsAttr={\n        showMessage:this.props.showMessage,\n        showErrorMessage:this.props.showErrorMessage\n      };\n      switch(this.state.current){\n        case 0:return <CollectData homePageStore={this.props.homePageStore} licenseInfoStore={this.props.licenseInfoStore}\n         {...propsAttr} nextStep={()=>this.nextStep(1)}></CollectData>\n        case 1:return <ConfirmPage licenseInfoStore={this.props.licenseInfoStore} homePageStore={this.props.homePageStore}\n         {...propsAttr} nextStep={()=>this.nextStep(2)}></ConfirmPage>\n        case 2:return <ExcelUploadPage homePageStore={this.props.homePageStore} licenseInfoStore={this.props.licenseInfoStore}\n        {...propsAttr} nextStep={()=>this.nextStep(3)}></ExcelUploadPage>\n        case 3:return <FinishPage nextStep={()=>this.nextStep(0)}></FinishPage>\n        default:return <FinishPage nextStep={()=>this.nextStep(0)}></FinishPage>\n      }\n    }\n\n\n    getStepStatus(current:number):StepStatus{\n      if(current<this.state.maxCurrent){\n        return StepStatus.Finish\n      }else if(current===this.state.maxCurrent){\n        return StepStatus.Process\n      }else{\n        return StepStatus.Wait;\n      }\n    }\n\n    render() :ReactElement{\n        return (\n            <div className=\"MainPage\">\n              <div className=\"step-content\">\n                  {this.getPageBycurrent()}\n              </div>\n              <div className=\"step-wrapper\">\n                <Steps           \n                type=\"navigation\"\n            current={this.state.current}\n            onChange={(current)=>{this.onChange(current)}}\n            className=\"site-navigation-steps\">\n                  <Step status={this.getStepStatus(0)} title=\"Upload license file\"  />\n                  <Step status={this.getStepStatus(1)}  title=\"Confirm license file\"  />\n                  <Step status={this.getStepStatus(2)} title=\"Upload excel file\"  />\n                  <Step status={this.getStepStatus(3)}  title=\"Done\"  />\n                </Steps>    \n              </div>          \n          </div>\n        );\n    }\n}\n\nexport default MainPage;","import { DraggerProps } from 'antd/lib/upload';\nimport React, { ReactElement } from 'react';\nimport { Upload} from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport './DraggerUpload.styl';\n\ninterface otherProps{\n  buttonText:string,\n  hint:string\n}\n\ntype Props=DraggerProps & otherProps;\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface State{\n  \n}\n\nconst { Dragger } = Upload;\nclass DraggerUpload extends React.Component<Props,State> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n        }\n    }\n\n\n    render():ReactElement {\n      const {buttonText,hint,...uploadProps} =this.props;\n        return (\n            <div className=\"DraggerUpload\">\n              <Dragger {...uploadProps}>\n                  <p className=\"ant-upload-drag-icon\">\n                  <InboxOutlined />\n                  </p>\n                  <p className=\"ant-upload-text\">{buttonText}</p>\n                  <p className=\"ant-upload-hint\">\n                  {hint}\n                  </p>\n              </Dragger>\n          </div>\n        );\n    }\n}\n\nexport default DraggerUpload;","import React, { ReactElement } from 'react';\nimport './Header.styl';\nexport interface Props{\n  title:React.ReactNode\n}\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface State{\n  //\n}\n\nclass Header extends React.Component<Props,State> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n        }\n    }\n\n\n    render():ReactElement {\n        return (\n            <div className=\"Header\">\n\n          </div>\n        );\n    }\n}\n\nexport default Header;","import React, { ReactElement } from 'react';\nimport './PreviewHTML.styl';\nimport { Modal, Button } from 'antd';\n\n\nexport interface Props{\n  visible:boolean,\n  handleCancel:() => void,\n  title:React.ReactNode,\n  children:any\n}\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface State{\n}\n\nclass PreviewHTML extends React.Component<Props,State> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n        }\n    }\n\n\n\n    render():ReactElement {\n        return (\n          <div className=\"PreviewHTML\">\n            <Modal bodyStyle={{overflow:\"auto\",height:\"500px\"}} width=\"95%\"\n              visible={this.props.visible}\n              title={this.props.title}\n              onCancel={()=>{this.props.handleCancel()}}\n              footer={[\n                <Button key=\"back\" onClick={()=>{this.props.handleCancel()}}>\n                  Cancel\n                </Button>\n              ]}>\n              {<html  dangerouslySetInnerHTML={{__html: this.props.children}}></html>}\n            </Modal>\n          </div>\n        );\n    }\n}\n\nexport default PreviewHTML;","import React, { ReactElement, ReactNode } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport './HtmlTable.styl';\r\nimport PreviewHTML from 'component/PreviewHTML/PreviewHTML';\r\nimport { LicenseInfoStore } from 'store/LicenseInfoStore';\r\n\r\nexport interface Props{\r\n  licenseInfoStore:LicenseInfoStore,\r\n  showMessage:(msg:string | ReactNode,action:{onOk?:()=>void,onCancel?:()=>void}) => void\r\n}\r\ninterface State{\r\n  filteredInfo: any,\r\n  sortedInfo: any,\r\n  preview:boolean,\r\n  currentFileName:string,\r\n  selectedRowKeys: Array<number>, // Check here to configure the default column\r\n  loading: boolean,\r\n  fileContent:string | null\r\n}\r\n\r\n@observer\r\nclass HtmlTable extends React.Component<Props,State> {\r\n  constructor(props:Props) {\r\n    super(props);\r\n    // react state\r\n    this.state = {\r\n      fileContent: null,\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n      preview: false,\r\n      currentFileName: \"\",\r\n      selectedRowKeys: [], // Check here to configure the default column\r\n      loading: false\r\n    }\r\n  }\r\n\r\n\r\n  getSortOrder(field:string):boolean | string {\r\n    let sortedInfo = this?.state?.sortedInfo;\r\n    if(sortedInfo){\r\n      return sortedInfo.field === field && sortedInfo.order; \r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  order(record1:any,record2:any):number{\r\n    if(!this.state.sortedInfo){\r\n      return 0;\r\n    }\r\n    let field=this.state.sortedInfo.field;\r\n    if(record1[field] ===record2[field] ){\r\n      return 0;\r\n    }else{\r\n      return  record1[field] > record2[field]?1:-1;\r\n    }\r\n  }\r\n\r\n  onSelectChange(selectedRowKeys:Array<number>):void{\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  }\r\n\r\n  remove():void{\r\n    if(this.state.selectedRowKeys.length===0){\r\n      return;\r\n    }\r\n    const message=\"Do you want to delete the record?\";\r\n    const self=this;\r\n    const action={\r\n      onOk:() => {\r\n        self.props.licenseInfoStore.remove(self.state.selectedRowKeys);\r\n        self.setState({ selectedRowKeys:[]});\r\n      }\r\n    }\r\n    this.props.showMessage(message,action)\r\n  }\r\n\r\n  removeAll():void{\r\n    if(this.props.licenseInfoStore.htmlFileDataSource.length===0){\r\n      return;\r\n    }\r\n    const message=\"Do you want to delete all record?\";\r\n    const self = this;\r\n    const action = {\r\n      onOk:() => {\r\n        self.props.licenseInfoStore.clear();\r\n        self.setState({ selectedRowKeys:[]});\r\n      }\r\n    }\r\n    this.props.showMessage(message,action)\r\n  }\r\n\r\n  handleChange(pagination:any, filters:any, sorter:any):void{\r\n    console.log('Various parameters', pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  }\r\n\r\n    getColumns():Array<any>{\r\n      return [{\r\n            title: 'File Name',\r\n            dataIndex: 'name',\r\n            key:\"name\",\r\n            sorter:this.order.bind(this),\r\n            sortOrder: this.getSortOrder.call(this,\"name\")\r\n          },{\r\n            title:\"Size\",\r\n            dataIndex:\"size\",\r\n            render: (size:number) =>{\r\n              let text=_.round(size/1024, 2) +\" kb\";\r\n              return <span>{text}</span>;\r\n            },\r\n            sorter:this.order.bind(this),\r\n            sortOrder: this.getSortOrder.call(this,\"size\")\r\n          },{\r\n            title:\"last Modified Date\",\r\n            dataIndex:\"lastModifiedDate\",\r\n            render:(lastModifiedDate:Date) => <span>{lastModifiedDate && lastModifiedDate.toDateString()}</span>,\r\n            sorter:this.order.bind(this),\r\n            sortOrder: this.getSortOrder.call(this,\"lastModifiedDate\")\r\n          },{\r\n            title:\"Action\",\r\n            dataIndex:\"file\",\r\n            render: (file:any) => <Button type=\"link\" onClick={()=>{this.review(file)}}>review</Button>,\r\n          }];\r\n    }\r\n\r\n    review(file:any):void{\r\n      let reader = new FileReader();\r\n      reader.readAsText(file);\r\n      let self=this;\r\n      reader.onload = function(event:any) {        \r\n        let result=event.target.result;\r\n        console.log(result);\r\n        self.setState({\r\n          preview:true,\r\n          fileContent:result,\r\n          currentFileName:file.name\r\n        })\r\n      }\r\n    }\r\n\r\n    handleCancel():void{\r\n      this.setState({ preview: false });\r\n    }\r\n\r\n    render():ReactElement{\r\n      const rowSelection = {\r\n        selectedRowKeys:this.state.selectedRowKeys,\r\n        onChange:(selectedRowKeys:any)=>{\r\n           this.onSelectChange(selectedRowKeys)\r\n        }\r\n      }\r\n      const columns=this.getColumns();\r\n        return (\r\n            <div className=\"HtmlTable\">\r\n              {this.state.preview && <PreviewHTML title={this.state.currentFileName} handleCancel={()=>{this.handleCancel()}} visible={this.state.preview}>\r\n                {this.state.fileContent}\r\n                </PreviewHTML>}\r\n              <div className=\"action-button-list\" >\r\n                <Button danger onClick={()=>{this.remove()}}> \r\n                  Remove\r\n                </Button>\r\n                <Button danger onClick={()=>{this.removeAll()}}> \r\n                  Remove All\r\n                </Button>\r\n              </div>\r\n              <Table pagination={{ position: [\"bottomLeft\"],\r\n              showTotal:(total, range) => `${range[0]}-${range[1]} of ${total} items`}}\r\n              onChange={(pagination, filters, sorter)=>{this.handleChange(pagination, filters, sorter)}} \r\n              rowSelection={rowSelection} size=\"small\" bordered columns={columns} dataSource={[...this.props.licenseInfoStore.htmlFileDataSource]} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HtmlTable;","import React, { ReactElement, ReactNode } from 'react';\nimport { Table, Button,Alert,Radio  } from 'antd';\nimport { observer} from 'mobx-react';\nimport { LicenseInfoStore } from 'src/store';\nimport './LicenseTable.styl';\n\n\nexport interface Props{\n  licenseInfoStore:LicenseInfoStore,\n  showMessage:(msg:string | ReactNode,action:{onOk?:()=>void,onCancel?:()=>void}) => void,\n}\n\ninterface State{\n  filteredInfo: any,\n  sortedInfo: any,\n  selectedRowKeys: Array<number>, \n  loading: boolean,\n  filterByStatus:number\n}\n\n@observer\nclass LicenseTable extends React.Component <Props,State> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n          filteredInfo: null,\n          sortedInfo: {field:\"convert\",order:\"ascend\"},\n          selectedRowKeys: [], // Check here to configure the default column\n          loading: false,\n          filterByStatus:1       \n        }\n  }\n\n  getSortOrder(field:any):boolean | string{\n    let sortedInfo=this?.state?.sortedInfo;\n    if(sortedInfo){\n      return sortedInfo.field===field && sortedInfo.order; \n    }else{\n      return false;\n    }\n  }\n\n  order(record1:any,record2:any):number{\n    if(!this.state.sortedInfo){\n      return 0;\n    }\n    let field=this.state.sortedInfo.field;\n    if(record1[field] ===record2[field] ){\n      return 0;\n    }else{\n      return  record1[field] > record2[field]?1:-1;\n    }\n  }\n\n  onSelectChange(selectedRowKeys:Array<number>):void{\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  }\n\n  remove():void{\n    if(this.state.selectedRowKeys.length===0){\n      return;\n    }\n    const message=\"Do you want to deleted the record?\";\n    const self=this;\n    const action={\n      onOk:()=>{\n        self.props.licenseInfoStore.removeLicenseInfo(self.state.selectedRowKeys);\n        self.setState({ selectedRowKeys:[]});\n      }\n    }\n    this.props.showMessage(message,action);\n  }\n\n  handleChange(pagination:any, filters:any, sorter:any):void{\n    console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  }\n\n  filterByStatus(status :boolean):void{\n    this.setState({\n      filteredInfo: {convert:[status]}\n    });\n  }\n\n  clearFilter():void{\n    this.setState({\n      filteredInfo: null\n    });\n  }\n\n  \n    getColumns():Array<any>{\n      return [{\n            title: 'File Name',\n            dataIndex: 'fileName',\n            key:\"fileName\",\n            sorter:this.order.bind(this),\n            sortOrder: this.getSortOrder.call(this,\"fileName\")\n          },{\n            title:\"Machine Name\",\n            dataIndex:\"computerName\",\n            sorter:this.order.bind(this),\n            sortOrder: this.getSortOrder.call(this,\"computerName\")\n          },{\n            title:\"User\",\n            dataIndex:\"windowLogon\",\n            sorter:this.order.bind(this),\n            sortOrder: this.getSortOrder.call(this,\"windowLogon\")\n          },{\n            title:\"Status\",\n            dataIndex:\"convert\",\n            sorter:this.order.bind(this),\n            filters:[{\n              text:\"Success\",value:true\n            },{\n              text:\"Fail\",value:false\n            }],\n            filteredValue: this.state.filteredInfo?.convert || null,\n            onFilter: (value:any, record:any) => record.convert===value,\n            render: (convert:boolean) => <div>{convert? <Alert type=\"success\" message=\"Success\" banner />:<Alert type=\"error\" message=\"Error\" banner />}</div>,\n            sortOrder: this.getSortOrder.call(this,\"convert\")\n          },{\n            title:\"Message\",\n            dataIndex:\"message\",\n            render: (message:string) => <pre>{message}</pre>,\n            sorter:this.order.bind(this),\n            sortOrder: this.getSortOrder.call(this,\"message\")\n          }];\n    }\n\n\n    getStatusOptions():Array<any>{\n      return [\n        { label: 'All', value: 1 },\n        { label: 'Success', value: 2 },\n        { label: 'Fail', value: 3 },\n      ];\n    }\n\n    changeStatusOptions(e:any):void{\n      let value=e.target.value;\n      let self=this;\n      this.setState({\n        filterByStatus:value\n      },()=>{\n        switch(value){\n          case 1: self.clearFilter();break;\n          case 2: self.filterByStatus(true);break;\n          case 3: self.filterByStatus(false);break;\n          default:self.clearFilter();break;\n        }\n      });\n    }\n\n    render():ReactElement{\n      const rowSelection = {\n        selectedRowKeys:this.state.selectedRowKeys,\n        onChange:(selectedRowKeys:any)=>{\n           this.onSelectChange(selectedRowKeys)\n        }\n      }\n      const columns=this.getColumns();\n        return (\n          <div className=\"LicenseTable\">\n            <div className=\"action-button-list\" >\n              <Button disabled={this.props.licenseInfoStore.licenseInfoDataSource.length?false:true} danger  onClick={()=>{this.remove()}}> \n                Remove\n              </Button>\n\n              <Radio.Group\n                options={this.getStatusOptions()}\n                onChange={this.changeStatusOptions.bind(this)}\n                value={this.state.filterByStatus}\n                optionType=\"button\"\n                buttonStyle=\"solid\"\n              />\n            </div>\n            <Table pagination={{ position: [\"bottomLeft\"],showTotal:(total, range) => `${range[0]}-${range[1]} of ${total} items`}}\n              onChange={(pagination, filters, sorter)=>{this.handleChange(pagination, filters, sorter)}} \n              rowSelection={rowSelection} size=\"small\" bordered columns={columns} \n              dataSource={[...this.props.licenseInfoStore.licenseInfoDataSource]} />\n          </div>\n        );\n    }\n}\n\nexport default LicenseTable;","import { Spin } from 'antd';\nimport React, { ReactElement } from 'react';\nimport './Loading.styl';\nexport interface Props{\n  display: boolean\n}\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface State{\n}\n\nclass Loading extends React.Component<Props,State> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n        }\n    }\n\n\n    render():ReactElement {\n        return (\n            <div className=\"Loading\">\n                {this.props.display && <div className=\"loading\">                \n                    <Spin size=\"large\" tip=\"Loading...\"></Spin>\n                </div>}\n          </div>\n        );\n    }\n}\n\nexport default Loading;","import React, { ReactElement, ReactNode } from 'react';\nimport { Menu, Button} from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined\n}from '@ant-design/icons';\nimport './Menu.styl';\nimport {Link } from 'react-router-dom';\nimport {MenuItem} from 'common/MenuConfig';\n\n\nexport interface Props{\n  menuItems:Array<MenuItem>\n}\ninterface State{\n  collapsed:boolean\n}\nconst { SubMenu } = Menu;\n\nclass MenuList extends React.Component<Props,State> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n          collapsed: true,\n        }\n    }\n\n    minWidth=80;\n    \n    maxWidth=256;\n\n    // eslint-disable-next-line no-undef\n    menuConfig={\n      defaultSelectedKeys:['0'],\n      mode:\"inline\",\n      theme:\"dark\",\n    }\n\n\n    \n    toggleCollapsed():void{\n      this.setState({\n        collapsed: !this.state.collapsed,\n      });\n    }\n\n    getMenuItem(menuItems:Array<MenuItem>,key=0):Array<ReactNode>{\n      let arr:Array<ReactNode>=[];\n       \n      for(let i=0;i<menuItems.length;i++){\n        let menuItem:MenuItem=menuItems[i];\n        let props:any={\n          key:key\n        };\n        key++;\n        let link:ReactNode;\n        if(menuItem.link){\n          link=<Link to={menuItem.link}>{menuItem.text}</Link>;\n        }else{\n          link=<span>{menuItem.text}</span>;\n        }\n        menuItem.icon && (props.icon=menuItem.icon);\n        if(!menuItem.subItem){\n          let element=(<Menu.Item {...props}>\n                        {link}\n                    </Menu.Item>);\n          arr.push(element);\n        }else{\n          let element=(<SubMenu  {...props} title={menuItem.text} >\n            {menuItem.subItem && \n            this.getMenuItem(menuItem.subItem,key)}\n          </SubMenu>);\n           arr.push(element);\n\n        }\n      }\n      return arr;\n    }\n\n    render() :ReactElement{\n      const menuItems=this.getMenuItem(this.props.menuItems);\n      return (\n        <div className=\"Menu\" style={{ width: this.state.collapsed?this.minWidth:this.maxWidth }}>\n          <Menu\n            {...(this.menuConfig as any)}\n            inlineCollapsed={this.state.collapsed}\n          >\n            {menuItems}\n            <Button type=\"primary\" onClick={()=>{this.toggleCollapsed()}} style={{ marginBottom: 16 }}>\n              {this.state.collapsed ? <MenuUnfoldOutlined></MenuUnfoldOutlined> : <MenuFoldOutlined></MenuFoldOutlined>}\n            </Button>\n          </Menu>\n        </div>\n      );\n    }\n}\n\nexport default MenuList;","import React, { ReactElement, ReactNode } from 'react';\nimport { Card } from 'antd';\nimport { CaretUpOutlined,CaretDownOutlined} from '@ant-design/icons';\nimport './Panel.styl';\n\nexport interface Props{\n  title: ReactNode | string\n}\ninterface State{\n  display: boolean\n}\n\nclass Panel extends React.Component<Props,State> {\n  constructor(props: Props) {\n        super(props);\n        //react state\n        this.state={\n          display:true\n        }\n    }\n\n    showOrHideContent(): void{\n      this.setState({\n        display:!this.state.display\n      });\n    }\n\n\n    render(): ReactElement {\n      // const childrenWithProps = React.Children.map((children, child) => React.cloneElement(child));\n      // let supportedInputTypes:any=[];\n      // let newChildren = React.Children.map(this.props.children,function(child:any) {\n      //   if (_.indexOf(child.type.displayName,supportedInputTypes)>=0) {\n      //     var extraChildProps = {\n      //     }\n      //     return React.cloneElement(child,extraChildProps);\n      //   } else {\n      //     return child;\n      //   }\n      // });\n        return (\n          <div className=\"Panel\">\n              <Card title={this.props.title}  extra={<span onClick={()=>{this.showOrHideContent()}}>{this.state.display?<CaretUpOutlined />:<CaretDownOutlined />}</span>} bordered={false} >\n                 {this.state.display && this.props.children}\n              </Card>\n          </div>\n        );\n    }\n}\n\nexport default Panel;","import React, { ReactElement } from 'react';\nimport './Split.styl';\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Props{\n  height?:number\n}\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface State{\n}\n\nclass Split extends React.Component<Props,State> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n        }\n    }\n\n\n    render():ReactElement {\n        return (\n          <div className=\"Split\" style={{height:(this.props.height || 15)}}>\n\n          </div>\n        );\n    }\n}\n\nexport default Split;","import React, { ReactElement, ReactNode } from 'react';\nimport {Button} from 'antd';\nimport {HtmlTable,Panel,DraggerUpload,Split} from 'src/component';\nimport {FileNew, LicenseInfoStore} from 'store/LicenseInfoStore'\nimport {HomePageStore} from 'store/HomePageStore'\nimport { observer } from 'mobx-react';\nimport axios from 'axios';\nimport './CollectData.styl';\n\nexport interface Props {\n    licenseInfoStore: LicenseInfoStore,\n    homePageStore: HomePageStore,\n    showMessage:(msg:string | ReactNode,action:{onOk?:()=>void,onCancel?:()=>void}) => void,\n    nextStep:()=>void,\n    showErrorMessage:(msg:string | ReactNode)=>void\n}\ninterface State {\n    fileList:Array<any>,\n    fileMap:any\n}\n\ninterface UploadProps {\n    accept:string,\n    multiple: boolean,\n    name:string,\n    showUploadList:boolean,\n    fileList:Array<any>,\n    uploading:boolean,\n    beforeUpload:(file:any)=>void,\n    buttonText:string,\n    hint:string\n}\n\n@observer\nclass CollectData extends React.Component<Props,State> {\n    constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n            fileList:this.props.licenseInfoStore.fileList,\n            fileMap:this.props.licenseInfoStore.fileMap || {}\n        }\n    }\n\n    getUploadProps():UploadProps{\n        let self=this;\n        return {\n            accept:\".htm,.html\",\n            buttonText:\"Click or drag file to this area to upload\",\n            hint:`Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files`,\n            multiple:true,\n            name:\"files\",\n            showUploadList:false,\n            fileList:this.state.fileList,\n            uploading: false,\n            beforeUpload: (file: FileNew) => {\n                let fileMap=self.state.fileMap;\n                //file[]\n                if(fileMap[file.name]){\n                    if(fileMap[file.name].lastModifiedDate<file.lastModifiedDate){\n                        fileMap[file.name]=file;\n                        self.setState({\n                            fileMap: fileMap\n                        });\n                    }\n                }else{\n                    fileMap[file.name]=file;\n                    self.setState({\n                        fileMap: fileMap\n                    });\n                }\n                self.props.licenseInfoStore.addFile(file);\n                self.setState((state) => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            }\n        }\n    }\n\n    submit ():void{\n        this.props.homePageStore.showLoading();\n        const self=this;\n        const formData = new FormData();\n        const licenseInfoStore=this.props.licenseInfoStore;\n        if(licenseInfoStore.fileList.length===0){\n            this.props.homePageStore.closeLoading();\n            this.props.showErrorMessage(\"Please confrim if upload the excel file and html file.\");\n            return;\n        }\n        for(let item in licenseInfoStore.fileList){\n          let file=licenseInfoStore.fileList[item];  \n          formData.append('files', file);\n        }\n        axios({\n          url: '/api/checkLicenseFile',\n          method: 'post',\n          data: formData})\n          .then((res) => { \n            console.log(res);\n            self.props.homePageStore.closeLoading();\n            if(res.data.status===0){\n                licenseInfoStore.licenseInfoList=res.data.data;\n                self.props.nextStep();\n            }           \n        }).catch(function(error){\n            console.log(error);\n            const errorMessage=\"Has internal server error, please check the log file.\";\n            self.props.showErrorMessage(errorMessage)\n            self.props.homePageStore.closeLoading();\n        });\n        \n    }\n\n\n    render() :ReactElement{\n        const uploadProps=this.getUploadProps();\n        return (\n            <div className=\"CollectData\" >\n                {/* <div style={{\"textAlign\":\"center\"}}>\n                    <h2>Upload the license information file (html file)</h2>\n                </div> */}\n                <Panel title=\"Upload the license information file (html file)\">\n                    <DraggerUpload {...uploadProps}></DraggerUpload>\n                </Panel>\n                <Split></Split>\n                <Panel title=\"Upload file information\">\n                    <div className=\"data-list\">\n                        <HtmlTable licenseInfoStore={this.props.licenseInfoStore} showMessage={this.props.showMessage}></HtmlTable>\n                    </div>\n                </Panel>\n                <div  className=\"action-button\">\n                    <Button disabled={this.state.fileList.length>0?false:true} type=\"primary\" onClick={()=>{this.submit()}}>Next</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CollectData;","import React, { ReactElement, ReactNode } from 'react';\nimport { Button,Modal,Alert } from 'antd';\nimport './ExcelUploadPage.styl';\nimport axios from 'axios';\nimport { observer } from 'mobx-react';\nimport {Panel,Split,DraggerUpload} from 'src/component';\nimport {LicenseInfoStore,HomePageStore} from 'src/store';\n\n\nexport interface Props {\n    licenseInfoStore: LicenseInfoStore,\n    homePageStore: HomePageStore,\n    showMessage:(msg:string | ReactNode,action:{onOk?:()=>void,onCancel?:()=>void}) => void,\n    showErrorMessage:(errorMessage:string) => void,\n    nextStep:() => void\n}\n\ninterface State {\n    enableNext:boolean,\n    name:string,\n    errorMessage:string | ReactNode | null,\n    excelFile:any,\n    fileList:Array<any>\n}\n\ninterface UploadProps {\n    accept:string,\n    multiple: boolean,\n    fileList:Array<any>,\n    uploading:boolean,\n    beforeUpload:(file:any)=>void,\n    showUploadList:any,\n    buttonText:string,\n    hint:string\n}\n\n@observer\nclass ExcelUploadPage extends React.Component<Props,State>{\n    constructor(props:Props) {\n        super(props);\n        axios.defaults.timeout=30000000;\n        //this.props.homePageStore.showLoading();\n        //react state\n        this.state={\n            fileList:[],\n            enableNext:this.props.licenseInfoStore.validExcelFile,\n            name:\"excelFile\",\n            errorMessage:\"\",\n            excelFile:this.props.licenseInfoStore.excelFile\n        }\n        if(this.props.licenseInfoStore.excelFile && this.props.licenseInfoStore.validExcelFile){\n            this.state.fileList.push(this.props.licenseInfoStore.excelFile)\n        }\n    }\n    destroyAll():void {\n        Modal.destroyAll();\n    }\n    getUploadProps():UploadProps{\n        let self=this;\n        return {\n            accept:\".xls,.xlsx\",\n            buttonText:\"Click or drag file to this area to upload\",\n            hint:`Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n            band files`,\n            multiple:false,\n            showUploadList:{\n                showDownloadIcon: false,\n                showRemoveIcon: false\n            },\n            fileList:this.state.fileList,\n            uploading: false,\n            beforeUpload: (file:any) => {\n                self.setState({\n                    excelFile: file,\n                    fileList:[file]\n                },()=>{\n                    self.props.licenseInfoStore.excelFile=file;\n                    console.log(self.props.licenseInfoStore);\n                    self.handleUpload();\n                });\n                return false;\n            }\n        }\n    }\n\n    handleUpload ():void{\n        let self=this;\n        const formData = new FormData();\n        formData.append(\"excelFile\",this.state.excelFile);\n        axios({\n          url: '/api/checkExcelFile',\n          method: 'post',\n          data: formData,\n          responseType: 'json'})\n          .then((res) => { \n            console.log(res);\n            if(res.status===200 && res.data.status===0){\n                self.setState({\n                    enableNext:true,\n                    errorMessage:\"\"\n                },()=>{\n                    self.props.licenseInfoStore.validExcelFile=true;\n                });\n                \n            }else{\n                self.setState({\n                    enableNext:false\n                },()=>{\n                    self.props.licenseInfoStore.validExcelFile=false;\n                });\n                if(res.data.message){\n                    let message=<pre>{res.data.message}</pre>;\n                    self.setState({\n                        errorMessage:message\n                    });\n                }\n            }\n        }).catch(function(error){\n            console.log(error);\n            self.setState({\n                enableNext:false,\n                errorMessage:\"Has internal server error, please check the log file.\"\n            },()=>{\n                self.props.licenseInfoStore.validExcelFile=false;\n            });\n            //self.props.showMessage(\"Has internal server error, please check the log file.\");\n        });\n    }\n\n    downloadFile():void{\n        const licenseInfoStore=this.props.licenseInfoStore;\n        const self=this;\n        axios({\n            url: '/api/downloadFile',\n            method: 'post',\n            responseType: 'blob'})\n            .then((res2) => { // 处理返回的文件流\n              const content = res2.data;\n              const blob = new Blob([content]);\n              let fileName=licenseInfoStore.fileName;\n              if ('download' in document.createElement('a')) { // 非IE下载\n                const elink = document.createElement('a');\n                elink.download = fileName;\n                elink.style.display = 'none';\n                elink.href = URL.createObjectURL(blob);\n                document.body.appendChild(elink);\n                elink.click();\n                URL.revokeObjectURL(elink.href); // 释放URL 对象\n                document.body.removeChild(elink);\n              } else { // IE10+下载\n                //navigator?.msSaveBlob(blob, fileName);\n              }\n              self.props.homePageStore.closeLoading();\n          }).catch(function(error){\n              console.log(error);\n              self.props.homePageStore.closeLoading();\n          });\n    }\n\n    submit ():void{\n        this.props.homePageStore.showLoading();\n        const self=this;\n        const formData = new FormData();\n        const licenseInfoStore=this.props.licenseInfoStore;\n        if(licenseInfoStore.licenseInfoList.length===0 || !licenseInfoStore.excelFile){\n            this.props.homePageStore.closeLoading();\n            this.props.showErrorMessage(\"Please confrim if upload the excel file and html file.\");\n            return;\n        }\n        let arr=[];\n        for(let item in licenseInfoStore.licenseInfoList){\n          let licenseInfo=licenseInfoStore.licenseInfoList[item];  \n          arr.push(licenseInfo);\n        }\n        formData.append('computerInfoListStr', JSON.stringify(arr));\n\n        formData.append(\"excelFile\",licenseInfoStore.excelFile);\n        axios({\n          url: '/api/download',\n          method: 'post',\n          data: formData})\n          .then((res) => { \n            console.log(res);\n            if(res?.data?.message){\n                const errorMessage=res?.data?.message;\n                self.props.showErrorMessage(errorMessage)\n                self.props.homePageStore.closeLoading();                \n                return;\n            }\n            self.downloadFile();\n            self.props.nextStep();\n        }).catch(function(error){\n            console.log(error);\n            const errorMessage=\"Has internal server error, please check the log file.\";\n            self.props.showErrorMessage(errorMessage)\n            self.props.homePageStore.closeLoading();\n        });\n        \n    }\n\n\n\n\n\n\n    render() :ReactElement{\n        const uploadProps=this.getUploadProps();\n        return (\n            <div className=\"ExcelUploadPage\" >\n                <Panel title=\"Upload the excel file\">\n                    <DraggerUpload {...uploadProps}></DraggerUpload>\n                    <Split></Split>\n                    <div>\n                        {this.state.errorMessage && <Alert message={this.state.errorMessage} type=\"error\" />}\n                    </div>  \n                </Panel>\n                <div  className=\"action-button\">\n                    <Button disabled={!this.state.enableNext} type=\"primary\" onClick={()=>{this.submit()}}>Next</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExcelUploadPage;","import React, { ReactElement } from 'react';\nimport './FinishPage.styl';\nimport { Result, Button } from 'antd';\n\nexport interface Props{\n  nextStep:() => void\n} \n\nclass FinishPage extends React.Component<Props> {\n  constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n        }\n    }\n\n\n    render():ReactElement {\n        return (\n            <div className=\"FinishPage\">\n            <Result\n                status=\"success\"\n                title=\"Successfully upload license information file. Please check the excel if can be download!\"\n                subTitle=\"Download file need takes 1-5 minutes, please wait.\"\n                extra={[\n                  <Button key={1} type=\"primary\" onClick={()=>{this.props.nextStep()}}>\n                    Go Home\n                  </Button>\n                ]}\n              />\n          </div>\n        );\n    }\n}\n\nexport default FinishPage;","import React, { ReactElement, ReactNode } from 'react';\nimport { Button} from 'antd';\nimport {LicenseTable,Panel, Split} from 'src/component';\nimport {LicenseInfoStore,HomePageStore} from 'src/store';\nimport axios from 'axios';\n\nimport './ConfirmPage.styl';\n\nexport interface Props {\n  showMessage:(msg:string | ReactNode,action:{onOk?:()=>void,onCancel?:()=>void}) => void,\n  nextStep:()=>void,\n  showErrorMessage:(errorMessage:string) => void,\n  licenseInfoStore: LicenseInfoStore,\n  homePageStore: HomePageStore,\n\n}\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface State {\n}\nclass ConfirmPage extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props);\n    //react state\n    this.state={\n    }\n  }\n\n  exportExcel():void{\n    const self=this;\n    self.props.homePageStore.showLoading();\n    axios({\n        url: '/api/exportReport',\n        method: 'post',\n        responseType: 'blob'})\n        .then((res2) => { // 处理返回的文件流\n          const content = res2.data;\n          const blob = new Blob([content]);\n          let fileName=\"upload license information.xlsx\";\n          if ('download' in document.createElement('a')) { // 非IE下载\n            const elink = document.createElement('a');\n            elink.download = fileName;\n            elink.style.display = 'none';\n            elink.href = URL.createObjectURL(blob);\n            document.body.appendChild(elink);\n            elink.click();\n            URL.revokeObjectURL(elink.href); // 释放URL 对象\n            document.body.removeChild(elink);\n          } else { // IE10+下载\n            //navigator?.msSaveBlob(blob, fileName);\n          }\n          self.props.homePageStore.closeLoading();\n      }).catch(function(error){\n          console.log(error);\n          self.props.showErrorMessage(\"Fail to export the data.\");\n          self.props.homePageStore.closeLoading();\n      });\n  }\n\n\n  render() :ReactElement{\n    return (\n        <div className=\"ConfirmPage\">\n          <Panel title=\"Confrim need upload file\">\n            <div className=\"data-list\">\n                <LicenseTable licenseInfoStore={this.props.licenseInfoStore} showMessage={this.props.showMessage}></LicenseTable>\n            </div>\n            <Split></Split>\n            <div  className=\"action-button\">\n              <Button type=\"primary\" onClick={()=>{this.exportExcel()}}>Export Excel</Button>\n            </div>           \n          </Panel> \n          <div  className=\"action-button\">\n            <Button type=\"primary\" onClick={()=>{this.props.nextStep()}}>Next</Button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default ConfirmPage;","import MainPage from './MainPage/MainPage';\r\nexport default MainPage;","/* eslint-disable react/react-in-jsx-scope */\r\nimport {PieChartOutlined} from '@ant-design/icons';\r\nimport { ReactNode } from 'react';\r\n\r\nexport interface MenuItem{\r\n    text:string,\r\n    link?:string,\r\n    subItem?:Array<MenuItem> | null,\r\n    icon?:ReactNode\r\n}\r\nclass MenuConfig{\r\n    menuItms:Array<MenuItem> = [{\r\n        text: \"Generate License File\",\r\n        link: \"LicenseGenerator\",\r\n        icon: <PieChartOutlined/>\r\n    },\r\n    // {\r\n    //     text: \"Menu1\",\r\n    //     icon: <PieChartOutlined/>,\r\n    //     subItem: [\r\n    //         {\r\n    //             text: \"Menu2\",\r\n    //             icon: <PieChartOutlined/>,\r\n    //             subItem: [\r\n    //                 {\r\n    //                     text: \"Menu3\",\r\n    //                     icon: <PieChartOutlined/>,\r\n    //                     subItem: [\r\n    //                         {\r\n    //                             text: \"Menu4\",\r\n    //                             link: \"Menu4\",\r\n    //                             icon: <PieChartOutlined/>}\r\n    //                     ]\r\n    //                 }\r\n    //             ]\r\n    //         }\r\n    //     ]\r\n    // }\r\n];\r\n}\r\nconst {menuItms}=new MenuConfig();\r\nexport default menuItms;","import React, { ReactElement, ReactNode } from 'react';\nimport {MenuList,Loading} from 'src/component';\nimport LicenseGenerator from 'page/LicenseGenerator';\nimport { Modal} from 'antd';\nimport { observer } from 'mobx-react';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { HomePageStore,LicenseInfoStore } from 'src/store';\nimport {HashRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\nimport menuItems from 'common/MenuConfig';\nimport 'page/HomePage/HomePage.styl';\nimport 'antd/dist/antd.css';\n\nexport interface Props{\n    homePageStore:HomePageStore,\n    licenseInfoStore:LicenseInfoStore\n}\n\n@observer\nclass HomePage extends React.Component<Props>{\n    constructor(props:Props) {\n        super(props);\n        //react state\n        this.state={\n\n        }\n    }\n\n    destroyAll():void {\n        Modal.destroyAll();\n    }\n\n    showErrorMessage(msg:string | ReactNode):void{\n        const { error } = Modal;\n        let self=this;\n        let config={\n            content: <div >{msg}</div>,\n            onOk() {\n                self.destroyAll()\n            }\n        };\n        error(config);\n    }\n      \n    showMessage(msg:string | ReactNode,action:{onOk?:()=>void,onCancel?:()=>void}):void{\n        const { confirm } = Modal;\n        let self=this;\n        let config={\n            icon: <ExclamationCircleOutlined />,\n            content: <div >{msg}</div>,\n            onOk() {\n                self.destroyAll()\n            },\n            onCancel() {\n                self.destroyAll()\n            },\n        };\n        if(action){\n            if(action.onOk){\n                config.onOk=()=>{\n                    action?.onOk && action.onOk();\n                    self.destroyAll()\n                }\n            }\n            if(action.onCancel){\n                config.onCancel=()=>{\n                    action?.onCancel && action.onCancel();\n                    self.destroyAll()\n                }\n            }\n        }\n        confirm(config);       \n      }\n    \n\n\n    render() :ReactElement{\n        const licenseGenerator=(\n            <LicenseGenerator \n                    homePageStore={this.props.homePageStore} licenseInfoStore={this.props.licenseInfoStore}\n                    showMessage={this.showMessage.bind(this)}\n                    showErrorMessage={this.showErrorMessage.bind(this)}\n                    ></LicenseGenerator>);\n        return (\n            <div className=\"HomePage\" >\n                <Router>          \n                <div className=\"menu-wrapper\">\n                     <MenuList menuItems={menuItems}></MenuList>                    \n                </div>\n                <div className=\"contain-wrapper\">      \n                 <Switch>   \n                    <Route path=\"/LicenseGenerator\" exact\n                     render={()=>licenseGenerator}\n                    ></Route>\n                    <Redirect to=\"/LicenseGenerator\" from='/' /> \n                    </Switch>\n                </div>\n                <Loading display={this.props.homePageStore.loading}></Loading>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React, { ReactElement } from 'react';\nimport HomePage from './page/HomePage/HomePage';\nimport { observer,inject } from 'mobx-react';\nimport {LicenseInfoStore} from 'store/LicenseInfoStore';\nimport {HomePageStore} from 'store/HomePageStore';\n\nexport interface Props{\n  licenseInfoStore: LicenseInfoStore,\n  homePageStore: HomePageStore\n}\n\n@inject('licenseInfoStore', 'homePageStore')\n@observer\nclass App extends React.Component<Props> {\n  render():ReactElement {\n    const stores = {\n      licenseInfoStore: this.props.licenseInfoStore,\n      homePageStore: this.props.homePageStore\n    }\n    return (\n      <div id=\"App_Conponent\" className=\"Application\">\n        <HomePage {...stores}></HomePage>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler):void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import homePageStore,{HomePageStore} from './HomePageStore';\r\nimport licenseInfoStore,{LicenseInfoStore} from './LicenseInfoStore';\r\nconst stores= {\r\n    homePageStore,\r\n    licenseInfoStore\r\n};\r\nexport {HomePageStore,LicenseInfoStore};\r\nexport default stores;","import {observable, action,makeObservable} from 'mobx';\r\n\r\nexport class HomePageStore {\r\n\r\n  loading=false;\r\n\r\n  constructor() {\r\n    // 添加makeObservable\r\n    makeObservable(this,{\r\n      loading:observable,\r\n      showLoading:action.bound,\r\n      closeLoading:action.bound\r\n    })\r\n  }\r\n\r\n  showLoading():void{\r\n    this.loading=true;\r\n  }\r\n\r\n  closeLoading():void{\r\n    this.loading=false;\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n}\r\nconst homePageStore = new HomePageStore();\r\n\r\nexport default homePageStore;","import {observable, action,makeObservable,computed } from 'mobx';\r\nimport _ from 'lodash';\r\n\r\nexport interface FileNew extends File{\r\n  lastModifiedDate:Date,\r\n  key?:number\r\n}\r\nexport interface FileInfo{\r\n  lastModifiedDate?:Date,\r\n  size?:number,\r\n  name?:string,\r\n  file?:File,\r\n  key?:number\r\n}\r\nexport class LicenseInfoStore {\r\n  constructor() {\r\n    makeObservable (this,{\r\n      fileList:observable,\r\n      licenseInfoList:observable,\r\n      addFile:action.bound,\r\n      clear:action.bound,\r\n      remove:action.bound,\r\n      htmlFileDataSource:computed,\r\n      licenseInfoDataSource:computed,\r\n      removeLicenseInfo:action.bound\r\n    });\r\n  }\r\n  fileList:Array<FileNew> =[];\r\n  key=0;\r\n  licenseInfoList:any=[];\r\n  fileMap={};\r\n  excelFile:FileNew | null=null;\r\n  readonly fileName:string=\"Company Software License.xlsx\";\r\n  validExcelFile=false;\r\n\r\n  get licenseInfoDataSource():Array<any>{\r\n    let dataSource:Array<any>=[];\r\n    for(let i=0;i<this.licenseInfoList.length;i++){\r\n        let obj:any=this.licenseInfoList[i];\r\n        if(obj.key===null || obj.key===undefined){\r\n          obj.key=i;\r\n        }\r\n        dataSource.push(obj);\r\n    } \r\n    return dataSource;\r\n  }\r\n\r\n  get htmlFileDataSource():Array<FileInfo>{\r\n    let dataSource: Array<FileInfo>=[];\r\n    for(let i=0;i<this.fileList.length;i++){\r\n        let file=this.fileList[i];\r\n        let fileInfo:FileInfo={};\r\n        fileInfo.lastModifiedDate=file.lastModifiedDate;\r\n        fileInfo.size=file.size;\r\n        fileInfo.name=file.name;\r\n        fileInfo.file=file;\r\n        fileInfo.key=file.key;\r\n        dataSource.push(fileInfo);\r\n    } \r\n    return dataSource;\r\n  }\r\n  \r\n  addFile(file:FileNew):void{\r\n    this.key++;\r\n    file.key=this.key;\r\n    this.fileList.push(file);\r\n  }\r\n  remove(selectedKeys:Array<number>):void{\r\n    for(let i=this.fileList.length-1;i>=0;i--){\r\n      let file=this.fileList[i];\r\n      if(_.indexOf(selectedKeys,file.key)>=0){\r\n        (this.fileList as any).remove(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeLicenseInfo(selectedKeys:Array<number>):void{\r\n    for(let i=this.licenseInfoList.length-1;i>=0;i--){\r\n      let licenseInfo:any=this.licenseInfoList[i];\r\n      if(_.indexOf(selectedKeys,licenseInfo.key)>=0){\r\n        this.licenseInfoList.remove(licenseInfo);\r\n      }\r\n    }\r\n  }\r\n  \r\n  clear():void{\r\n    (this.fileList as any).clear();\r\n  }\r\n\r\n  \r\n\r\n}\r\nconst licenseInfoStore=new LicenseInfoStore();\r\nexport default licenseInfoStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider} from 'mobx-react';\nimport stores from './store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...stores}>\n         <App {...stores}/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}